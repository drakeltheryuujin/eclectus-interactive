/*
 * Table of contents:
 * 01 Common elements
 * 02 Spinners
 * 03 Navigation
 * 04 Layout blocks
 * 05 Modals
 * 06 Toasts
 * 07 Social
 * 08 Projects
 * 09 Owl gallery
 * 10 Services
 * 11 Prices
 * 12 About
 * 13 Blog
 * 14 Contact
 * 15 Inputs
 * 16 Footer
 * 17 Tunnel
 */
@import url("https://use.typekit.net/ixp1kdm.css");
html,
body,
.full-height {
  height: 100%;
  color: #313C3F;
}

body {
  background-color: #fff;
}

body.locked {
  overflow-y: hidden;
}

.hero {
  overflow: hidden;
}

h1,
h2,
h3,
h4,
.brand-logo,
.button-collapse {
  font-family: "aw-conqueror-carved-one", "Roboto", sans-serif;
  -webkit-font-smoothing: antialiased;
  font-kerning: normal;
  -moz-osx-font-smoothing: grayscale;
  -moz-font-feature-settings: 'liga', 'kern';
  text-rendering: optimizeLegibility;
  color: #2E347D;
}

h2 {
  margin-bottom: 0;
  font-size: 6rem;
  font-weight: 200;
  letter-spacing: -2px;
  text-align: center;
  /* + h3 { */
  /* margin-top: -.75rem; */
  /* margin-bottom: 3rem; */
  /* } */
}

@media only screen and (max-width: 600px) {
  h2 {
    font-size: 3rem;
  }
}

h2 span {
  position: relative;
  z-index: 10;
  padding: 0 1rem;
  background-color: rgba(255, 255, 255, 0.85);
}

h2::after {
  position: relative;
  display: block;
  top: -4rem;
  width: 100%;
  height: 2px;
  margin: 1rem auto 0;
  background-color: #FC3F78;
  content: '';
}

@media only screen and (max-width: 600px) {
  h2::after {
    top: -3rem;
  }
}

h3 {
  text-align: center;
  color: #2645DB;
}

@media only screen and (max-width: 600px) {
  h3 {
    font-size: 1.8rem;
  }
}

h5,
h6 {
  font-family: "aw-conqueror-slab", "Roboto", sans-serif;
}

section {
  padding-bottom: 5rem;
}

section.hero {
  padding-bottom: 0;
}

@media only screen and (max-width: 600px) {
  section {
    padding-bottom: 3rem;
  }
}

.nobr {
  white-space: nowrap;
}

.collapsible {
  box-shadow: none;
}

.container {
  width: 90%;
  max-width: 1600px;
}

@media only screen and (min-width: 601px) {
  .container {
    width: 90%;
  }
}

@media only screen and (min-width: 993px) {
  .container {
    width: 90%;
  }
}

.container.full-width {
  width: 100%;
}

.container.row.narrow-row {
  margin-right: 0;
  margin-left: 0;
}

.row .col.padding-bottom {
  padding-bottom: 1.5rem;
}

.extra-padding {
  padding: 3rem 0;
}

@media only screen and (max-width: 600px) {
  .extra-padding {
    padding: 1.5rem 0;
  }
}

.no-padding {
  padding: 0;
}

.margin-top {
  margin-top: 3rem;
}

.margin-top-more {
  margin-top: 6rem;
}

@media only screen and (max-width: 600px) {
  .margin-top-more {
    margin-top: 3rem;
  }
}

.big-icons-row i {
  font-size: 6rem;
}

@media only screen and (max-width: 600px) {
  .big-icons-row i {
    font-size: 4rem;
  }
}

iframe {
  border: 0;
}

.progress {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 999;
  display: none;
  margin: 0;
  background-color: #DDFD70;
}

.progress .indeterminate {
  background-color: #2AE792;
}


.spinner-dot-in,
.spinner-dot-stick,
.spinner-double-dot-stick,
.spinner-dot-out,
.spinner-double-dot-out,
.spinner-double-dot-in,
.spinner-wave-out,
.spinner-wave-in,
.spinner-double-wave-out,
.spinner-double-wave-in,
.spinner-huge-wave-out,
.spinner-huge-wave-in,
.spinner-section,
.spinner-section-in,
.spinner-double-section-in,
.spinner-section-out,
.spinner-double-section-out,
.spinner-section-far,
.spinner-double-section-far,
.spinner-double-section {
  display: block;
  float: left;
  width: 60px;
  height: 60px;
  border: 3.75px solid #9e9e9e;
  border-radius: 50%;
  animation: spinner 2s linear infinite;
}

@keyframes spinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}


.spinner-dot-in,
.spinner-dot-stick,
.spinner-double-dot-stick,
.spinner-dot-out,
.spinner-double-dot-out,
.spinner-double-dot-in {
  position: relative;
}


.spinner-dot-in::before,
.spinner-dot-stick::before,
.spinner-double-dot-stick::before,
.spinner-dot-out::before,
.spinner-double-dot-out::before,
.spinner-dot-in::after,
.spinner-dot-stick::after,
.spinner-double-dot-stick::after,
.spinner-dot-out::after,
.spinner-double-dot-out::after,
.spinner-double-dot-in::before,
.spinner-double-dot-in::after {
  position: absolute;
  top: 7.5px;
  left: 26.25px;
  width: 7.5px;
  height: 7.5px;
  background: #fff;
  border-radius: 50%;
  content: '';
}


.spinner-dot-in::after,
.spinner-dot-stick::after,
.spinner-double-dot-stick::after,
.spinner-dot-out::after,
.spinner-double-dot-out::after,
.spinner-double-dot-in::after {
  top: auto;
  bottom: 7.5px;
}


.spinner-dot-in::after {
  display: none;
}


.spinner-dot-stick::before,
.spinner-dot-stick::after,
.spinner-double-dot-stick::before,
.spinner-double-dot-stick::after {
  top: -7.5px;
}


.spinner-dot-stick::after,
.spinner-double-dot-stick::after {
  top: auto;
  bottom: -7.5px;
}


.spinner-dot-stick::after {
  display: none;
}


.spinner-dot-out::before,
.spinner-dot-out::after,
.spinner-double-dot-out::before,
.spinner-double-dot-out::after {
  top: -15px;
}


.spinner-dot-out::after,
.spinner-double-dot-out::after {
  top: auto;
  bottom: -15px;
}


.spinner-dot-out::after {
  display: none;
}


.spinner-wave-out {
  box-shadow: -1.875px -1.875px 0 1.875px #fff;
}


.spinner-wave-in {
  box-shadow: inset -1.875px -1.875px 0 1.875px #fff;
}


.spinner-double-wave-out {
  box-shadow: -1.875px -1.875px 0 1.875px #fff, 1.875px 1.875px 0 1.875px #fff;
}


.spinner-double-wave-in {
  box-shadow: inset -1.875px -1.875px 0 1.875px #fff, inset 1.875px 1.875px 0 1.875px #fff;
}


.spinner-huge-wave-out {
  box-shadow: -1.875px -1.875px 0 7.5px #fff;
}


.spinner-huge-wave-in {
  box-shadow: inset -1.875px -1.875px 0 7.5px #fff;
}


.spinner-section,
.spinner-section-in,
.spinner-double-section-in,
.spinner-section-out,
.spinner-double-section-out,
.spinner-section-far,
.spinner-double-section-far,
.spinner-double-section {
  position: relative;
}


.spinner-section::before,
.spinner-section-in::before,
.spinner-double-section-in::before,
.spinner-section-out::before,
.spinner-double-section-out::before,
.spinner-section-far::before,
.spinner-double-section-far::before,
.spinner-section::after,
.spinner-section-in::after,
.spinner-double-section-in::after,
.spinner-section-out::after,
.spinner-double-section-out::after,
.spinner-section-far::after,
.spinner-double-section-far::after,
.spinner-double-section::before,
.spinner-double-section::after {
  position: absolute;
  top: -3.75px;
  left: -3.75px;
  display: block;
  width: 60px;
  height: 60px;
  border: 3.75px solid transparent;
  border-top-color: #fff;
  border-radius: 50%;
  content: '';
}


.spinner-section::after,
.spinner-section-in::after,
.spinner-double-section-in::after,
.spinner-section-out::after,
.spinner-double-section-out::after,
.spinner-section-far::after,
.spinner-double-section-far::after,
.spinner-double-section::after {
  border-top-color: transparent;
  border-bottom-color: #fff;
}


.spinner-section::after {
  display: none;
}


.spinner-section-in::before,
.spinner-section-in::after,
.spinner-double-section-in::before,
.spinner-double-section-in::after {
  top: 0;
  left: 0;
  width: 52.5px;
  height: 52.5px;
}


.spinner-section-in::after {
  display: none;
}


.spinner-section-out::before,
.spinner-section-out::after,
.spinner-double-section-out::before,
.spinner-double-section-out::after {
  top: -7.5px;
  left: -7.5px;
  width: 67.5px;
  height: 67.5px;
}


.spinner-section-out::after {
  display: none;
}


.spinner-section-far::before,
.spinner-section-far::after,
.spinner-double-section-far::before,
.spinner-double-section-far::after {
  top: -11.25px;
  left: -11.25px;
  width: 75px;
  height: 75px;
}


.spinner-section-far::after {
  display: none;
}

.spinner-container {
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  -webkit-transition: all 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  -moz-transition: all 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  transition: all 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  position: fixed;
  top: 0;
  left: 0;
  z-index: 999;
  width: 100%;
  height: 100%;
  background: #313C3F;
}

.spinner-container > div {
  -webkit-transition: opacity 0.3s cubic-bezier(0.075, 0.82, 0.165, 1);
  -moz-transition: opacity 0.3s cubic-bezier(0.075, 0.82, 0.165, 1);
  transition: opacity 0.3s cubic-bezier(0.075, 0.82, 0.165, 1);
  opacity: 1;
}

.spinner-container.hide-spinner {
  top: 50%;
  height: 0;
}

.spinner-container.hide-spinner > div {
  opacity: 0;
}

.table-of-contents li {
  padding: 0;
}

.table-of-contents li .active,
.table-of-contents li a,
.table-of-contents li a:hover {
  padding: 0;
  margin: 0 20px;
  font-weight: normal;
  border-left: 0;
}

.table-of-contents li a:hover {
  border-bottom: 1px solid #2E347D;
  color: #2645DB;
}

.table-of-contents li .active {
  border-bottom: 1px solid #2645DB;
  color: #2645DB;
}

.table-of-contents li:last-of-type a {
  margin-right: 0;
}

nav {
  background-color: #fff;
  box-shadow: none;
  border-bottom: 1px solid #FC3F78;
}

nav .brand-logo {
  font-weight: 500;
  letter-spacing: -1px;
  color: #313C3F;
}

nav ul a,
nav a {
  color: #313C3F;
}

nav ul a:hover,
nav a:hover {
  background: none;
}

nav .table-of-contents a,
nav .table-of-contents a:hover {
  color: #313C3F;
}

.hamburger {
  position: relative;
  width: 20px;
  height: 2px;
  cursor: pointer;
  background: #313C3F;
}

.hamburger::after, .hamburger::before {
  position: relative;
  display: block;
  width: 20px;
  height: 2px;
  background: #313C3F;
  content: '';
}

.hamburger::after {
  top: -8px;
}

.hamburger::before {
  top: 6px;
}

.rectangle {
  padding-bottom: 66.67%;
}

.rectangle-50 {
  padding-bottom: 50%;
}

@media only screen and (max-width: 600px) {
  .rectangle-50 {
    padding-bottom: 66.67%;
  }
}

.square {
  padding-bottom: 100%;
}

.rectangle,
.rectangle-50,
.square {
  position: relative;
  display: block;
  overflow: hidden;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

.rectangle > .content,
.rectangle-50 > .content,
.square > .content {
  position: absolute;
  width: 100%;
}

.rectangle > .content div,
.rectangle-50 > .content div,
.square > .content div {
  width: 100%;
}

.modal.bottom-sheet {
  height: 100%;
  max-height: none;
}

.modal blockquote {
  font-size: 3rem;
  font-weight: 200;
  border-left: 0;
}

@media only screen and (max-width: 600px) {
  .modal blockquote {
    font-size: 1.5rem;
    font-weight: 300;
  }
}

.modal-close {
  position: absolute;
  top: 0;
  left: 1.5rem;
  z-index: 10000;
  font-size: 3rem;
}

.modal-close::after {
  position: absolute;
  top: 0;
  left: 0;
  font-size: 1rem;
  content: 'esc';
}

.about .modal.bottom-sheet {
  height: auto;
}

@media only screen and (max-width: 992px) {
  .about .modal.bottom-sheet {
    height: 100%;
  }
  .about .modal.bottom-sheet .modal-content .square {
    padding-bottom: 0;
  }
  .about .modal.bottom-sheet .modal-content .square .content {
    position: relative;
  }
}

@media only screen and (max-width: 992px) and (min-width: 601px) {
  #toast-container {
    right: 5%;
  }
}

.toast {
  display: none;
  height: auto;
  padding: 20px;
  line-height: 1.75rem;
}

.toast:first-of-type {
  display: block;
}

.toast a {
  display: block;
  color: #fff;
  text-decoration: underline;
}

.toast.error {
  background-color: #FF5252;
}

.toast.success {
  color: #313C3F;
  background-color: #00E676;
}

.social .content {
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

.social a {
  display: inline-block;
  padding: 3px 5px;
  margin: 0 3px;
}

.social a.facebook {
  color: #fff;
  background-color: #3b5998;
}

.social a.facebook:hover {
  background-color: rgba(59, 89, 152, 0.7);
}

.social a.twitter {
  color: #fff;
  background-color: #4099ff;
}

.social a.twitter:hover {
  background-color: rgba(64, 153, 255, 0.7);
}

.social a.github {
  color: #fff;
  background-color: #999;
}

.social a.github:hover {
  background-color: rgba(153, 153, 153, 0.7);
}

.social a.instagram {
  color: #fff;
  background-color: #E1306C;
}

.social a.instagram:hover {
  background-color: rgba(225, 48, 108, 0.7);
}

@media only screen and (max-width: 600px) {
  .social a {
    margin-bottom: 5px;
  }
}

.social a:first-of-type {
  margin-left: 5px;
}

.social.huge a {
  margin: 0;
}

.projects h2 {
  margin-top: 5rem;
}

.projects .content {
  height: 100%;
}

.projects .content div {
  -webkit-transform: translate3d(0, 100%, 0);
  -moz-transform: translate3d(0, 100%, 0);
  -ms-transform: translate3d(0, 100%, 0);
  -o-transform: translate3d(0, 100%, 0);
  transform: translate3d(0, 100%, 0);
  -webkit-transition: all 0s linear;
  -moz-transition: all 0s linear;
  transition: all 0s linear;
  padding: 0 1rem;
  font-size: 4rem;
  line-height: 4rem;
  color: #fff;
  opacity: 0;
}

@media only screen and (max-width: 600px) {
  .projects .content div {
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    -o-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
    font-size: 2rem;
    line-height: 2rem;
    text-shadow: 0 1px 1px rgba(49, 60, 63, 0.25);
    opacity: 1;
  }
}

@media only screen and (max-width: 600px) {
  .projects .content {
    background: rgba(49, 60, 63, 0.1);
  }
}

.projects .content:hover {
  background-color: rgba(49, 60, 63, 0.7);
}

.projects .content:hover div {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  -webkit-transition: all 0.3s cubic-bezier(0.075, 0.82, 0.165, 1);
  -moz-transition: all 0.3s cubic-bezier(0.075, 0.82, 0.165, 1);
  transition: all 0.3s cubic-bezier(0.075, 0.82, 0.165, 1);
  opacity: 1;
}

@media only screen and (max-width: 600px) {
  .projects .content:hover {
    -webkit-transition: none;
    -moz-transition: none;
    transition: none;
    background-color: transparent;
  }
}

.owl-carousel .col {
  padding: 0;
}

.owl-carousel .owl-item {
  -webkit-transform: translateZ(0) scale(1, 1);
  -webkit-backface-visibility: hidden;
}

.owl-carousel .owl-dot {
  display: inline-block;
  margin-right: .5rem;
}

.owl-carousel .owl-dot span {
  display: block;
  width: 10px;
  height: 10px;
  background: #eeeeee;
  border-radius: 50%;
}

.owl-carousel .owl-dot.active span {
  background: #bdbdbd;
}

.services .col > div {
  background-color: #DDFD70;
}

.service-items .content {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-orient: vertical;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -o-align-items: center;
  align-items: center;
  -ms-flex-align: center;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
  padding: 0 1rem;
}

.service-items .content i {
  -webkit-transition-property: -webkit-transform, opacity;
  -moz-transition-property: -moz-transform, opacity;
  transition-property: transform, opacity;
  -webkit-transition-duration: 0s, 0s;
  -moz-transition-duration: 0s, 0s;
  transition-duration: 0s, 0s;
  -webkit-transition-timing-function: linear, cubic-bezier(0.075, 0.82, 0.165, 1);
  -moz-transition-timing-function: linear, cubic-bezier(0.075, 0.82, 0.165, 1);
  transition-timing-function: linear, cubic-bezier(0.075, 0.82, 0.165, 1);
  opacity: 1;
}

@media only screen and (max-width: 600px) {
  .service-items .content i {
    -webkit-transition: none;
    -moz-transition: none;
    transition: none;
    -webkit-transform: translateY(-120%);
    -moz-transform: translateY(-120%);
    -ms-transform: translateY(-120%);
    -o-transform: translateY(-120%);
    transform: translateY(-120%);
  }
}

.service-items .content h4,
.service-items .content p {
  -webkit-transition: opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  -moz-transition: opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  transition: opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  width: 100%;
  padding: 0 1.5rem;
  text-align: center;
  cursor: default;
  opacity: .2;
}

@media only screen and (max-width: 600px) {
  .service-items .content h4,
  .service-items .content p {
    opacity: 1;
  }
}

@media only screen and (min-width: 993px) and (max-width: 1100px) {
  .service-items .content p {
    font-size: 1.3rem;
  }
}

@media only screen and (max-width: 600px) {
  .service-items .content h4 {
    font-size: 1.4rem;
  }
}

.service-items .content .description {
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  transform: translateY(-50%);
  position: absolute;
  top: 50%;
  left: 0;
}

@media only screen and (max-width: 600px) {
  .service-items .content .description {
    top: 65%;
  }
}

.service-items .content:hover h4,
.service-items .content:hover p {
  opacity: 1;
}

.service-items .content:hover i {
  -webkit-transition-property: -webkit-transform, opacity;
  -moz-transition-property: -moz-transform, opacity;
  transition-property: transform, opacity;
  -webkit-transition-duration: 10s, 0.4s;
  -moz-transition-duration: 10s, 0.4s;
  transition-duration: 10s, 0.4s;
  -webkit-transition-timing-function: linear, cubic-bezier(0.075, 0.82, 0.165, 1);
  -moz-transition-timing-function: linear, cubic-bezier(0.075, 0.82, 0.165, 1);
  transition-timing-function: linear, cubic-bezier(0.075, 0.82, 0.165, 1);
  -webkit-transform: scale(2);
  -moz-transform: scale(2);
  -ms-transform: scale(2);
  -o-transform: scale(2);
  transform: scale(2);
  opacity: .1;
}

@media only screen and (max-width: 600px) {
  .service-items .content:hover i {
    opacity: 1;
  }
}

.prices .divider {
  width: 50%;
  height: 2px;
  margin: 1.5rem auto 0;
}

.prices strong + p {
  margin-top: 0;
}

.prices .info {
  position: relative;
  top: -3px;
  display: inline-block;
  width: 1.5rem;
  height: 1.5rem;
  margin-left: .5rem;
  font-size: 1rem;
  line-height: 1.5rem;
  color: #9e9e9e;
  cursor: help;
  background: #e0e0e0;
  border-radius: 50%;
}

.prices h5 {
  font-size: 4rem;
  font-weight: 200;
}

.prices .currency {
  position: relative;
  top: -1.5rem;
  font-size: 1.5rem;
  font-weight: 300;
}

.about .name {
  margin: .5rem 0 0 1rem;
  font-size: 2rem;
  color: #fff;
}

.about .you {
  height: 100%;
}

.about .you a {
  color: #313C3F;
  border-bottom: 1px solid #2E347D;
}

.about .you a:hover {
  border-bottom: 1px solid #2645DB;
}

.about .you .name {
  color: #313C3F;
  text-align: center;
}

.about .modal .square {
  overflow: scroll;
}

.about .modal .square > .content {
  padding: 1.5rem 2rem;
}

.about .modal-cover .square {
  overflow: hidden;
}

.about .modal-content .square {
  overflow-x: hidden;
}

.about .philosophy {
  padding: 5rem 0 4rem;
}

@media only screen and (max-width: 600px) {
  .about .philosophy {
    padding: 3rem 0 2rem;
  }
}

.about .philosophy .tabs {
  height: auto;
  background-color: transparent;
}

.about .philosophy .tabs .tab {
  height: auto;
  letter-spacing: normal;
  color: #313C3F;
  text-transform: none;
}

@media only screen and (max-width: 600px) {
  .about .philosophy .tabs .tab h5 {
    display: none;
  }
}

.about .philosophy .tabs .tab a {
  color: rgba(49, 60, 63, 0.6);
}

.about .philosophy .tabs .tab a.active {
  color: #313C3F;
}

.about .philosophy .tab-contents h5 {
  display: none;
}

@media only screen and (max-width: 600px) {
  .about .philosophy .tab-contents h5 {
    display: block;
    margin: 2rem 0 -2rem;
    text-align: center;
  }
}

.about .philosophy .indicator {
  height: 3px;
  background-color: #313C3F;
}

.map {
  height: 500px;
}

.send-message span {
  display: inline-block;
  min-width: 50px;
  padding: 0 5px;
  background: rgba(158, 158, 158, 0.1);
  outline: none;
}

.send-message span:focus {
  background: rgba(158, 158, 158, 0.3);
}

.send-message .btn,
.send-message .btn-large {
  margin-top: 2rem;
}

.contact-details a {
  color: #313C3F;
  border-bottom: 1px solid #2E347D;
}

.contact-details a:hover {
  border-bottom: 1px solid #2645DB;
}

.contact-details a:hover.fa-external-link {
  color: #FC3F78;
}

.contact-details .active {
  border-bottom: #FC3F78;
}

.contact-details address {
  margin-top: 15px;
  font-style: normal;
}

.contact-details .fa {
  font-size: 1rem;
}

.contact-details .im .fa {
  width: 1.5rem;
}

.contact-details .fa-external-link {
  color: #BB1B51;
}

.input-field label {
  color: #313C3F;
}

input[type=text],
input[type=email],
input[type=email],
textarea.materialize-textarea {
  padding-right: 1rem;
  padding-left: 1rem;
  background: rgba(158, 158, 158, 0.1);
  border-bottom: 0;
  box-sizing: border-box;
}

textarea.materialize-textarea {
  overflow-y: scroll;
  height: 8rem !important;
}

.input-field input[type=text]:focus:not([readonly]),
.input-field input[type=email]:focus,
.input-field input[type=email]:focus:not([readonly]),
input[type=email]:focus,
input[type=email]:focus:not([readonly]),
textarea.materialize-textarea:focus,
textarea.materialize-textarea:focus:not([readonly]) {
  background: rgba(158, 158, 158, 0.3);
  border-bottom: 0;
  box-shadow: none;
}

.input-field input[type=text]:focus:not([readonly]) + label,
.input-field input[type=email]:focus + label,
.input-field input[type=email]:focus:not([readonly]) + label,
input[type=email]:focus + label,
input[type=email]:focus:not([readonly]) + label,
textarea.materialize-textarea:focus + label,
textarea.materialize-textarea:focus:not([readonly]) + label {
  color: #313C3F;
}

.input-field input[type=text].valid,
.input-field input[type=email].valid,
textarea.materialize-textarea.valid {
  border-bottom: 0;
  box-shadow: none;
}

.input-field input[type=text].invalid,
.input-field input[type=email].invalid,
textarea.materialize-textarea.invalid {
  border-bottom: 0;
  box-shadow: none;
}

.input-field .prefix.active {
  color: #313C3F;
}

footer.page-footer {
  color: #313C3F;
  background-color: #DDFD70;
}

footer.page-footer .footer-copyright {
  color: #313C3F;
}

footer.page-footer input[type=submit]:focus {
  outline: 0;
}

.tunnel-skin .navbar-fixed {
  height: 0;
}

.tunnel-skin .btn,
.tunnel-skin .btn-large {
  color: #fff;
  background-color: #BB1B51;
}

.tunnel-skin .btn:hover,
.tunnel-skin .btn-large:hover {
  background-color: #FC3F78;
}

.tunnel-skin .tunnel canvas {
  background-color: #2E347D;
}

.tunnel-skin .tunnel h1 {
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  transform: translateY(-50%);
  position: absolute;
  top: 50%;
  z-index: 10;
  width: 100%;
  padding: 0 2rem;
  margin: 0;
  font-size: 5rem;
  font-weight: 700;
  letter-spacing: 2px;
  color: #fff;
  text-align: center;
  text-shadow: 0 1px 1px rgba(46, 52, 125, 0.2);
  text-transform: uppercase;
}

@media only screen and (max-width: 600px) {
  .tunnel-skin .tunnel h1 {
    padding: 0 1rem;
    font-size: 3rem;
  }
}

canvas {
  display: block;
  vertical-align: bottom;
}

#particles-js {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.3);
  background-image: url("../images/avatar.svg");
  background-repeat: no-repeat;
  background-size: 40%;
  background-position: 50% 50%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
